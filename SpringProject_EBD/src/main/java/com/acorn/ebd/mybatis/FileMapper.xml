<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="file">
	
	<select id="getList" parameterType="fileDto" resultType="fileDto">
		SELECT *
		FROM
			(SELECT result1.*, ROWNUM AS rnum
			FROM
				(SELECT num, writer, title, orgfname, savefname,
					fileSize, imgpath, content, viewcnt, 
					ebd_file.regdate, profile
				FROM ebd_file, ebd_users
				<choose>
					<when test="title != null">
						WHERE title LIKE '%'||#{title}||'%' AND (ebd_file.writer=ebd_users.nick)
					</when>
					<when test="writer != null">
						WHERE writer LIKE '%'||#{writer}||'%' AND (ebd_file.writer=ebd_users.nick)
					</when>
					<when test="title == null and writer==null">
						WHERE ebd_file.writer=ebd_users.nick
					</when>
				</choose>
				ORDER BY num DESC) result1)
		WHERE rnum BETWEEN #{startRowNum} AND #{endRowNum}
	</select>
	
	<select id="getCount" parameterType="fileDto" resultType="int">
		SELECT NVL(MAX(ROWNUM), 0)
		FROM ebd_file
		<choose>
			<when test="title != null">
				WHERE title LIKE '%'||#{title}||'%'
			</when>
			<when test="writer != null">
				WHERE writer LIKE '%'||#{writer}||'%'
			</when>
		</choose>	
	</select>
	
	<select id="getData" parameterType="int" resultType="fileDto">
		SELECT r1.*, ebd_users.profile
		FROM
			(SELECT num, writer, title, orgfname, savefname, fileSize, 
				imgpath, content, viewcnt, regdate,
				LAG(num, 1, 0) OVER (ORDER BY num DESC) AS prevNum, 
				LEAD(num, 1, 0) OVER (ORDER BY num DESC) AS nextNum 
			FROM ebd_file 
			ORDER BY num DESC) r1, ebd_users
		WHERE num=#{num} AND r1.writer=ebd_users.nick
	</select>
	
	<insert id="insert" parameterType="fileDto">
		INSERT INTO ebd_file
		(num, writer, title, orgfname, savefname, fileSize, imgpath, content, viewcnt, regdate)
		VALUES(ebd_file_seq.NEXTVAL, #{writer}, #{title}, #{orgfname}, #{savefname},
			#{fileSize}, #{imgpath}, #{content}, 0 , SYSDATE )
	</insert>
	
	<delete id="delete" parameterType="int">
		DELETE FROM ebd_file
		WHERE num=#{num}
	</delete>
	
	<update id="update" parameterType="fileDto">
		UPDATE ebd_file
		SET title=#{title}, content=#{content}, imgpath=#{imgpath}, 
			orgfname=#{orgfname}, savefname=#{savefname}, fileSize=#{fileSize}
		WHERE num=#{num}  
	</update>
	
	<update id="addViewCount" parameterType="int">
		UPDATE ebd_file
		SET viewcnt=viewcnt+1
		WHERE num=#{num}
	</update>
	
	<!-- 하트를 클릭했을 때 로그인된 닉네임 정보와 하트를 클릭한 글의 num을 insert해준다. -->
    <insert id="insertH" parameterType="fileDto">
       INSERT INTO ebd_file_heart
       (num, target_num, writer)
       VALUES(ebd_file_heart_seq.NEXTVAL, #{num}, #{nick})
    </insert>
   
    <!-- 하트를 해제 했을 때 로그인된 아이디정보와 하트를 클릭한 글의 num을 delete해준다. -->
    <delete id="deleteHeart" parameterType="fileDto">
       DELETE FROM ebd_file_heart
       WHERE target_num=#{num} AND writer=#{nick}
    </delete>
    
    <!-- 하트 갯수 디테일  -->
    <select id="getHeartCntDetail" parameterType="int" resultType="int">
       SELECT NVL(r1.heartcnt,0) heartcnt
       FROM (SELECT target_num, count(*) heartcnt
                FROM ebd_file_heart
                GROUP BY target_num) r1, ebd_file e
       WHERE r1.target_num(+) = e.num and e.num=#{num}
    </select>
   
    <!-- 로그인이 되어있다면 로그인된 닉네임의 하트 테이블 정보를 select해준다. -->
    <select id="selectHeartInfo" parameterType="fileDto" resultType="int">
       SELECT target_num
       FROM
          (SELECT r1.target_num, ROWNUM AS rnum
          FROM
             (SELECT e.num, NVL(h.target_num,0) target_num
             FROM ebd_file e, ebd_file_heart h
             <choose>
                <!--title이 null이 아니라면-->
                <when test="title != null">
                   WHERE (title LIKE '%' || #{title} || '%') AND e.num = h.target_num(+) AND h.writer(+)=#{nick}
                </when>
                <!--writer이 null이 아니라면-->
                <when test="writer != null">
                   WHERE (e.writer LIKE '%' || #{writer} || '%') AND e.num = h.target_num(+) AND h.writer(+)=#{nick} 
                </when>
                <!-- 모두 null 이라면 WHERE절에 이런 쿼리문만 들어간다. -->
                <when test="title ==null and writer ==null">
                   WHERE e.num = h.target_num(+) AND h.writer(+)=#{nick}
                </when>
             </choose>
             ORDER BY num DESC) r1) 
       WHERE rnum BETWEEN #{startRowNum} AND #{endRowNum}
    </select>
   
   	<!-- 하트 갯수  -->
    <select id="getHeartCnt" parameterType="fileDto" resultType="int" >
       SELECT heartcnt
       FROM
          (SELECT r2.heartcnt, ROWNUM AS rnum
          FROM
             (SELECT NVL(r1.heartcnt,0) heartcnt
                 FROM (select target_num, count(*) heartcnt
                 FROM ebd_file_heart
                 GROUP BY target_num) r1, ebd_file e
             <choose>
                <!--title이 null이 아니라면-->
                <when test="title != null">
                   WHERE (title LIKE '%' || #{title} || '%') AND r1.target_num(+) = e.num
                </when>
                <!--writer이 null이 아니라면-->
                <when test="writer != null">
                   WHERE (e.writer LIKE '%' || #{writer} || '%') AND r1.target_num(+) = e.num
                </when>
                <!-- 모두 null 이라면 WHERE절에 이런 쿼리문만 들어간다. -->
                <when test="title ==null and writer ==null">
                   WHERE r1.target_num(+) = e.num
                </when>  
            </choose>
            ORDER BY num DESC) r2) 
       WHERE rnum BETWEEN #{startRowNum} AND #{endRowNum}
    </select>
   
    <!-- 디테일페이지 중 하트 정보 해당 nick이 해당num번 글에 하트를 클릭했으면 target_num이 리턴, 그렇지 않으면 null리턴  -->
    <select id="getHeartInfoDetail" parameterType="fileDto" resultType="String">
       SELECT target_num
       FROM ebd_file_heart
       WHERE target_num=#{num} and writer=#{nick}          
    </select>
    
    <!-- 조회수 높은 순 Best5를 불러오는 메소드 -->
    <select id="getBestViewCntList" resultType="fileDto">
    	SELECT num, writer, title, orgfname, savefname, fileSize, imgpath, content, viewcnt, regdate
		FROM ebd_file
		WHERE ROWNUM BETWEEN 1 AND 5
		ORDER BY viewcnt DESC 
    </select>
   
    
    
	
</mapper>