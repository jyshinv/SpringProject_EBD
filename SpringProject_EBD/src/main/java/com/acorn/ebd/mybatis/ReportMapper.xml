<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="report">
	<insert id="insert" parameterType="reportDto">
		INSERT INTO  ebd_report
		(num, writer, booktitle, author, title, genre, stars, imgpath, link, content, viewcnt, regdate)
		VALUES(ebd_report_seq.NEXTVAL, #{writer}, #{booktitle}, #{author}, #{title}, #{genre}, #{stars}, #{imgpath}, #{link}, #{content}, 0, SYSDATE)
	</insert>
	<select id="getCount" parameterType="reportDto" resultType="int">
		SELECT NVL(MAX(ROWNUM), 0)
		FROM ebd_report
		<choose>
			<when test="booktitle != null and author != null">
				WHERE (booktitle LIKE '%'||#{booktitle}||'%' OR author LIKE '%'||#{author}||'%') and publicck=#{publicck}
			</when>
			<when test="booktitle != null">
				WHERE (booktitle LIKE '%'||#{booktitle}||'%') and publicck=#{publicck}
			</when>
			<when test="author != null">
				WHERE (author LIKE '%'||#{author}||'%') and publicck=#{publicck}
			</when>
			<when test="author == null and booktitle==null">
               WHERE publicck=#{publicck}
            </when>
		</choose>		
	</select>
	<select id="getCountTotal" resultType="int">
		SELECT NVL(MAX(ROWNUM), 0)
		FROM ebd_report	
	</select>	
	<select id="getList" parameterType="reportDto" resultType="reportDto">
		SELECT *
		FROM
			(SELECT result.*,ROWNUM AS rnum
			FROM
				(SELECT num, writer, booktitle, title, author, genre, stars, imgpath, link, content, viewcnt, regdate
				FROM ebd_report			
				ORDER BY num DESC)result)
		WHERE rnum BETWEEN #{startRowNum} AND #{endRowNum}
	</select>
	<select id="getPublicList" parameterType="reportDto" resultType="reportDto">
		SELECT *
		FROM 
			(SELECT result1.*, ROWNUM AS rnum
			FROM 
				(SELECT num, writer, booktitle, title, author, genre, stars, imgpath, link, content, viewcnt, regdate, publicck
				FROM ebd_report
				<choose>
					<when test="booktitle != null and author != null">
						WHERE (booktitle LIKE '%'||#{booktitle}||'%' OR author LIKE '%'||#{author}||'%') and publicck=#{publicck}
					</when>
					<when test="booktitle != null">
						WHERE (booktitle LIKE '%'||#{booktitle}||'%') and publicck=#{publicck}
					</when>
					<when test="author != null">
						WHERE (author LIKE '%'||#{author}||'%') and publicck=#{publicck}
					</when>
					<when test="author == null and booktitle==null">
	                  WHERE publicck=#{publicck}
	               </when>
				</choose>
				ORDER BY num DESC)
			result1)
		WHERE rnum BETWEEN #{startRowNum} AND #{endRowNum}		
	</select>
	<select id="getData" parameterType="reportDto" resultType="reportDto">
		SELECT * 
		FROM
			(SELECT num, writer, booktitle, title, author, genre, stars, publicck, imgpath, link, content, viewcnt, regdate,
				LAG(num, 1, 0) OVER (ORDER BY num DESC) AS prevNum, 
				LEAD(num, 1, 0) OVER (ORDER BY num DESC) AS nextNum
			FROM ebd_report
			ORDER BY num DESC)
		WHERE num=#{num}
	</select>
	<update id="addViewCount" parameterType="reportDto">
		UPDATE ebd_report
		SET viewcnt=viewcnt+1
		WHERE num=#{num}
	</update>
	<delete id="delete" parameterType="reportDto">
		DELETE FROM ebd_report
		WHERE num=#{num}
	</delete>
	<update id="updatepublicck" parameterType="reportDto">
		UPDATE ebd_report
		SET publicck=#{publicck}
		WHERE num=#{num}
	</update>
	<update id="update" parameterType="reportDto">
		UPDATE ebd_report
		SET title=#{title }, imgpath=#{imgpath }, content=#{content }
		WHERE num=#{num}
	</update>
	
	<!-- 여기서 부터 하트와 관련된 쿼리문 -->
   <!-- 하트를 클릭했을 때 로그인된 닉네임 정보와 하트를 클릭한 글의 num을 insert해준다. -->
   <insert id="insertHeart" parameterType="reportDto">
      INSERT INTO ebd_report_heart
      (num, target_num, writer)
      VALUES(ebd_report_heart_seq.NEXTVAL, #{num}, #{nick})
   </insert>
   
   <!-- 하트를 해제 했을 때 로그인된 아이디정보와 하트를 클릭한 글의 num을 delete해준다. -->
   <delete id="deleteHeart" parameterType="reportDto">
      DELETE FROM ebd_report_heart
      WHERE target_num=#{num} AND writer=#{nick}
   </delete>
   
   <!-- 로그인이 되어있다면 로그인된 닉네임의 하트 테이블 정보를 select해준다. -->
   <select id="selectHeartInfo" parameterType="reportDto" resultType="int">
      SELECT target_num
      FROM
         (SELECT r1.target_num, ROWNUM AS rnum
         FROM
            (SELECT e.num, NVL(h.target_num,0) target_num
            FROM ebd_report e, ebd_report_heart h
            <choose>
               <!-- if문과 비슷한 구조임, title과 content가 둘다 null아 아니라면, 제목, 내용겁색 -->
                <when test="booktitle != null and author != null">
                   WHERE (booktitle LIKE '%' || #{booktitle} || '%' OR author LIKE '%' || #{author} || '%') AND (e.num = h.target_num(+) AND h.writer(+)=#{nick}) and (publicck=#{publicck})   
                </when>
               <!--title이 null이 아니라면-->
                <when test="booktitle != null">
                   WHERE (booktitle LIKE '%' || #{booktitle} || '%') AND (e.num = h.target_num(+) AND h.writer(+)=#{nick}) and (publicck=#{publicck})
                </when>
               <!--writer이 null이 아니라면-->
                <when test="author != null">
                   WHERE (e.author LIKE '%' || #{author} || '%') AND (e.num = h.target_num(+) AND h.writer(+)=#{nick}) and (publicck=#{publicck})
                </when>
               <!-- 모두 null 이라면 WHERE절에 이런 쿼리문만 들어간다. -->
               <when test="booktitle ==null and author ==null">
                  WHERE e.num = h.target_num(+) AND h.writer(+)=#{nick} and publicck=#{publicck}
               </when>
            </choose>
            ORDER BY num DESC) r1) 
      WHERE rnum BETWEEN #{startRowNum} AND #{endRowNum}
   </select>
   
   
   <!-- 에피소드 리스트에 하트 개수 테이블을 리턴해주는 쿼리문 -->
   <select id="getHeartCnt" parameterType="reportDto" resultType="int" >
      SELECT heartcnt
      FROM
         (SELECT r2.heartcnt, ROWNUM AS rnum
         FROM
            (SELECT NVL(r1.heartcnt,0) heartcnt
                FROM (select target_num, count(*) heartcnt
                 FROM ebd_report_heart
                 GROUP BY target_num) r1, ebd_report e
            <choose>
               <!-- if문과 비슷한 구조임, title과 content가 둘다 null아 아니라면, 제목, 내용겁색 -->
                <when test="booktitle != null and author != null">
                   WHERE (booktitle LIKE '%' || #{booktitle} || '%' OR author LIKE '%' || #{author} || '%') AND r1.target_num(+) = e.num and publicck=#{publicck} 
                </when>
               <!--title이 null이 아니라면-->
                <when test="booktitle != null">
                   WHERE (booktitle LIKE '%' || #{booktitle} || '%') AND r1.target_num(+) = e.num and publicck=#{publicck}
                </when>
               <!--writer이 null이 아니라면-->
                <when test="author != null">
                   WHERE (e.author LIKE '%' || #{author} || '%') AND r1.target_num(+) = e.num and publicck=#{publicck}
                </when>
               <!-- 모두 null 이라면 WHERE절에 이런 쿼리문만 들어간다. -->
               <when test="booktitle ==null and author ==null">
                  WHERE r1.target_num(+) = e.num and publicck=#{publicck}
               </when>
            </choose>
            ORDER BY num DESC) r2) 
      WHERE rnum BETWEEN #{startRowNum} AND #{endRowNum}
   </select>
   
   <!-- 에피소드 디테일 중 하트 정보 해당 nick이 해당num번 글에 하트를 클릭했으면 target_num이 리턴, 그렇지 않으면 null리턴  -->
   <select id="getHeartInfoDetail" parameterType="reportDto" resultType="String">
      select target_num
      from ebd_report_heart
      where target_num=#{num} and writer=#{nick}          
   </select>
   
   <select id="getHeartCntDatail" parameterType="int" resultType="int">
      SELECT NVL(r1.heartcnt,0) heartcnt
      FROM (SELECT target_num, count(*) heartcnt
               FROM ebd_report_heart
               GROUP BY target_num) r1, ebd_report e
      WHERE r1.target_num(+) = e.num and e.num=#{num}
   </select>
</mapper>