<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="episode">
	<insert id="insert" parameterType="episodeDto">
		INSERT INTO ebd_episode
		(num, writer, title, content , imgPath, viewcnt ,regdate)
		VALUES(ebd_episode_seq.NEXTVAL, #{writer}, #{title}, #{content}, #{imgPath}, 0, SYSDATE)
	</insert>
	
	<select id="getList" parameterType="episodeDto" resultType="episodeDto">
		<!-- mybatis의 특징 중 하나는  dynamic query를 지원한다는 것이다 아래 query문을 통해 dynamic query문을 어떻게 구성하는지 알아보자 -->
		SELECT *
		FROM
			(SELECT result1.*, ROWNUM AS rnum
			FROM		
				(SELECT num, writer, title, content, imgpath , viewcnt, regdate
				FROM ebd_episode
				<choose>
					<!-- if문과 비슷한 구조임, title과 content가 둘다 null아 아니라면, 제목, 내용겁색 -->
				 	<when test="title != null and content != null">
				 		WHERE title LIKE '%' || #{title} || '%' OR content LIKE '%' || #{content} || '%'
				 	</when>
					<!--title이 null이 아니라면-->
				 	<when test="title != null">
				 		WHERE title LIKE '%' || #{title} || '%'
				 	</when>
					<!--writer이 null이 아니라면-->
				 	<when test="writer != null">
				 		WHERE writer LIKE '%' || #{writer} || '%'
				 	</when>
					<!-- 모두 null 이라면 WHERE절에 쿼리문이 들어가지 않는다. -->
				</choose>
				ORDER BY num DESC) result1)
		WHERE rnum BETWEEN #{startRowNum} AND #{endRowNum}
	</select>
	
	
	
	<select id="getCount" parameterType="episodeDto" resultType="int">
		SELECT NVL(MAX(ROWNUM),0)
		FROM ebd_episode
		<choose>
			<!-- if문과 비슷한 구조임, title과 content가 둘다 null아 아니라면, 제목, 내용겁색 -->
		 	<when test="title != null and content != null">
		 		WHERE title LIKE '%' || #{title} || '%' OR content LIKE '%' || #{content} || '%'
		 	</when>
			<!--title이 null이 아니라면-->
		 	<when test="title != null">
		 		WHERE title LIKE '%' || #{title} || '%'
		 	</when>
			<!--writer이 null이 아니라면-->
		 	<when test="writer != null">
		 		WHERE writer LIKE '%' || #{writer} || '%'
		 	</when>
			<!-- 모두 null 이라면 WHERE절에 쿼리문이 들어가지 않는다. -->
		</choose> 
	</select>
	
	<!-- 에피소드 디테일 중 글 정보 -->
	<select id="getData" parameterType="episodeDto" resultType="episodeDto">
		SELECT * 
		FROM
			(SELECT num, writer, title, imgPath, regdate, content,
				LAG(num, 1, 0) OVER (ORDER BY num DESC) AS prevNum, 
				LEAD(num, 1, 0) OVER (ORDER BY num DESC) AS nextNum 
			FROM ebd_episode
			ORDER BY num DESC)
		WHERE num=#{num}
	</select>
	
	<!-- 여기서 부터 하트와 관련된 쿼리문 -->
	<!-- 하트를 클릭했을 때 로그인된 닉네임 정보와 하트를 클릭한 글의 num을 insert해준다. -->
	<insert id="insertHeart" parameterType="episodeDto">
		INSERT INTO ebd_episode_heart
		(num, target_num, writer)
		VALUES(ebd_wording_heart_seq.NEXTVAL, #{num}, #{nick})
	</insert>
	
	<!-- 하트를 해제 했을 때 로그인된 아이디정보와 하트를 클릭한 글의 num을 delete해준다. -->
	<delete id="deleteHeart" parameterType="episodeDto">
		DELETE FROM ebd_episode_heart
		WHERE target_num=#{num} AND writer=#{nick}
	</delete>
	
	<!-- 로그인이 되어있다면 로그인된 닉네임의 하트 테이블 정보를 select해준다. -->
	<select id="selectHeartInfo" parameterType="episodeDto" resultType="int">
		SELECT target_num
		FROM
			(SELECT r1.target_num, ROWNUM AS rnum
			FROM
				(SELECT e.num, NVL(h.target_num,0) target_num
				FROM ebd_episode e, ebd_episode_heart h
				<choose>
					<!-- if문과 비슷한 구조임, title과 content가 둘다 null아 아니라면, 제목, 내용겁색 -->
				 	<when test="title != null and content != null">
				 		WHERE (title LIKE '%' || #{title} || '%' OR content LIKE '%' || #{content} || '%') AND e.num = h.target_num(+) AND h.writer(+)=#{nick}   
				 	</when>
					<!--title이 null이 아니라면-->
				 	<when test="title != null">
				 		WHERE (title LIKE '%' || #{title} || '%') AND e.num = h.target_num(+) AND h.writer(+)=#{nick}
				 	</when>
					<!--writer이 null이 아니라면-->
				 	<when test="writer != null">
				 		WHERE (e.writer LIKE '%' || #{writer} || '%') AND e.num = h.target_num(+) AND h.writer(+)=#{nick} 
				 	</when>
					<!-- 모두 null 이라면 WHERE절에 이런 쿼리문만 들어간다. -->
					<when test="title ==null and content ==null and writer ==null">
						WHERE e.num = h.target_num(+) AND h.writer(+)=#{nick}
					</when>
				</choose>
				ORDER BY num DESC) r1) 
		WHERE rnum BETWEEN #{startRowNum} AND #{endRowNum}
	</select>
	
	
	<!-- 에피소드 리스트에 하트 개수 테이블을 리턴해주는 쿼리문 -->
	<select id="getHeartCnt" parameterType="episodeDto" resultType="int" >
		SELECT heartcnt
		FROM
			(SELECT r2.heartcnt, ROWNUM AS rnum
			FROM
				(SELECT NVL(r1.heartcnt,0) heartcnt
            	 FROM (select target_num, count(*) heartcnt
                 FROM ebd_episode_heart
                 GROUP BY target_num) r1, ebd_episode e
				<choose>
					<!-- if문과 비슷한 구조임, title과 content가 둘다 null아 아니라면, 제목, 내용겁색 -->
				 	<when test="title != null and content != null">
				 		WHERE (title LIKE '%' || #{title} || '%' OR content LIKE '%' || #{content} || '%') AND r1.target_num(+) = e.num   
				 	</when>
					<!--title이 null이 아니라면-->
				 	<when test="title != null">
				 		WHERE (title LIKE '%' || #{title} || '%') AND r1.target_num(+) = e.num
				 	</when>
					<!--writer이 null이 아니라면-->
				 	<when test="writer != null">
				 		WHERE (e.writer LIKE '%' || #{writer} || '%') AND r1.target_num(+) = e.num
				 	</when>
					<!-- 모두 null 이라면 WHERE절에 이런 쿼리문만 들어간다. -->
					<when test="title ==null and content ==null and writer ==null">
						WHERE r1.target_num(+) = e.num
					</when>
				</choose>
				ORDER BY num DESC) r2) 
		WHERE rnum BETWEEN #{startRowNum} AND #{endRowNum}
	</select>
	
	<!-- 에피소드 디테일 중 하트 정보 해당 nick이 해당num번 글에 하트를 클릭했으면 target_num이 리턴, 그렇지 않으면 null리턴  -->
	<select id="getHeartInfoDetail" parameterType="episodeDto" resultType="String">
		select target_num
		from ebd_episode_heart
		where target_num=#{num} and writer=#{nick} 			
	</select>
	
	<select id="getHeartCntDatail" parameterType="int" resultType="int">
		SELECT NVL(r1.heartcnt,0) heartcnt
		FROM (SELECT target_num, count(*) heartcnt
      			FROM ebd_episode_heart
      			GROUP BY target_num) r1, ebd_episode e
		WHERE r1.target_num(+) = e.num and e.num=#{num}
	</select>
	
	<update id="updateData" parameterType="episodeDto">
		UPDATE ebd_episode
		<choose>
			<when test="imgPath != null">
				SET title=#{title }, imgPath=#{imgPath }, content=#{content }
			</when>
			<otherwise>
				SET title=#{title }, content=#{content }
			</otherwise>
		</choose>
		WHERE num=#{num}
	</update>
	
</mapper>