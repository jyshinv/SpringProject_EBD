<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="wording">
	<!-- wording정보를 insert -->
	<insert id="insert" parameterType="wordingDto">
		INSERT INTO ebd_wording
		(num, writer, title, author, content, regdate)
		VALUES(ebd_wording_seq.NEXTVAL, #{writer}, #{title}, #{author}, #{content}, SYSDATE)
	</insert>
	
	<!--wording 목록을 select regdate컬럼은 두 테이블에 모두 존재하므로 어떤 테이블의 regdate인지 명시해주어야한다.(여기선 글 쓴 regdate가 필요)-->
	<select id="getList" parameterType="wordingDto" resultType="wordingDto">
		SELECT *
		FROM
			(SELECT result1.*, ROWNUM AS rnum
			FROM
				(SELECT num, writer, title, content, author, ebd_wording.regdate, profile
				FROM ebd_wording, ebd_users 
				<choose>
					<!-- if문과 비슷한 구조임, title과 content가 둘다 null아 아니라면, 제목, 내용겁색 -->
				 	<when test="title != null and content != null">
				 		WHERE (title LIKE '%' || #{title} || '%' OR content LIKE '%' || #{content} || '%') AND (ebd_wording.writer = ebd_users.nick)
				 	</when>
					<!--title이 null이 아니라면-->
				 	<when test="title != null">
				 		WHERE (title LIKE '%' || #{title} || '%') AND ebd_wording.writer = ebd_users.nick
				 	</when>
					<!--writer이 null이 아니라면-->
				 	<when test="writer != null">
				 		WHERE (writer LIKE '%' || #{writer} || '%') AND ebd_wording.writer = ebd_users.nick
				 	</when>
					<!-- 모두 null 이라면 WHERE절에 이런 쿼리문만 들어간다. -->
					<when test="title ==null and content ==null and writer ==null">
						WHERE ebd_wording.writer = ebd_users.nick
					</when>
				</choose>
				ORDER BY num DESC) result1) 
		WHERE rnum BETWEEN #{startRowNum} AND #{endRowNum}
	</select>
	
	<select id="getCount" parameterType="wordingDto" resultType="int">
		SELECT NVL(MAX(ROWNUM), 0)
		FROM ebd_wording
		<choose>
			<!-- if문과 비슷한 구조임, title과 content가 둘다 null아 아니라면, 제목, 내용겁색 -->
		 	<when test="title != null and content != null">
		 		WHERE title LIKE '%' || #{title} || '%' OR content LIKE '%' || #{content} || '%' 
		 	</when>
			<!--title이 null이 아니라면-->
		 	<when test="title != null">
		 		WHERE title LIKE '%' || #{title} || '%' 
		 	</when>
			<!--writer이 null이 아니라면-->
		 	<when test="writer != null">
		 		WHERE writer LIKE '%' || #{writer} || '%' 
		 	</when>
			<!-- 모두 null 이라면 WHERE절에 쿼리문이 들어가지 않는다. -->
		</choose> 
	</select>
	
	<!-- 하트를 클릭했을 때 로그인된 닉네임 정보와 하트를 클릭한 글의 num을 insert해준다. -->
	<insert id="insertHeart" parameterType="wordingDto">
		INSERT INTO ebd_wording_heart
		(num, target_num, writer)
		VALUES(ebd_wording_heart_seq.NEXTVAL, #{num}, #{nick})
	</insert>
	
	<!-- 하트를 해제 했을 때 로그인된 아이디정보와 하트를 클릭한 글의 num을 delete해준다. -->
	<delete id="deleteHeart" parameterType="wordingDto">
		DELETE FROM ebd_wording_heart
		WHERE target_num=#{num} AND writer=#{nick}
	</delete>
	
	
	<!-- 로그인이 되어있다면 로그인된 아이디의 하트 테이블 정보를 select해준다. -->
	<select id="selectHeartInfo" parameterType="wordingDto" resultType="int">
		SELECT target_num
		FROM
			(SELECT r1.target_num, ROWNUM AS rnum
			FROM
				(SELECT w.num, NVL(h.target_num,0) target_num
				FROM ebd_wording w, ebd_wording_heart h
				<choose>
					<!-- if문과 비슷한 구조임, title과 content가 둘다 null아 아니라면, 제목, 내용겁색 -->
				 	<when test="title != null and content != null">
				 		WHERE (title LIKE '%' || #{title} || '%' OR content LIKE '%' || #{content} || '%') AND w.num = h.target_num(+) AND h.writer(+)=#{nick}   
				 	</when>
					<!--title이 null이 아니라면-->
				 	<when test="title != null">
				 		WHERE (title LIKE '%' || #{title} || '%') AND w.num = h.target_num(+) AND h.writer(+)=#{nick}
				 	</when>
					<!--writer이 null이 아니라면-->
				 	<when test="writer != null">
				 		WHERE (w.writer LIKE '%' || #{writer} || '%') AND w.num = h.target_num(+) AND h.writer(+)=#{nick} 
				 	</when>
					<!-- 모두 null 이라면 WHERE절에 이런 쿼리문만 들어간다. -->
					<when test="title ==null and content ==null and writer ==null">
						WHERE w.num = h.target_num(+) AND h.writer(+)=#{nick}
					</when>
				</choose>
				ORDER BY num DESC) r1) 
		WHERE rnum BETWEEN #{startRowNum} AND #{endRowNum}
	</select>
	
	<!-- wording 리스트에 하트 개수 테이블을 리턴해주는 쿼리문 -->
	<select id="getHeartCnt" parameterType="wordingDto" resultType="int" >
		SELECT heartcnt
		FROM
			(SELECT r2.heartcnt, ROWNUM AS rnum
			FROM
				(SELECT NVL(r1.heartcnt,0) heartcnt
            	 FROM (select target_num, count(*) heartcnt
                 		FROM ebd_wording_heart
                 		GROUP BY target_num) r1, ebd_wording w
				<choose>
					<!-- if문과 비슷한 구조임, title과 content가 둘다 null아 아니라면, 제목, 내용겁색 -->
				 	<when test="title != null and content != null">
				 		WHERE (title LIKE '%' || #{title} || '%' OR content LIKE '%' || #{content} || '%') AND r1.target_num(+) = w.num   
				 	</when>
					<!--title이 null이 아니라면-->
				 	<when test="title != null">
				 		WHERE (title LIKE '%' || #{title} || '%') AND r1.target_num(+) = w.num
				 	</when>
					<!--writer이 null이 아니라면-->
				 	<when test="writer != null">
				 		WHERE (w.writer LIKE '%' || #{writer} || '%') AND r1.target_num(+) = w.num
				 	</when>
					<!-- 모두 null 이라면 WHERE절에 이런 쿼리문만 들어간다. -->
					<when test="title ==null and content ==null and writer ==null">
						WHERE r1.target_num(+) = w.num
					</when>
				</choose>
				ORDER BY num DESC) r2) 
		WHERE rnum BETWEEN #{startRowNum} AND #{endRowNum}
	</select>
	
	<!-- 리스트에서 각각의 하트 개수를 리턴해준다. -->
	<select id="getHeartCntDatail" parameterType="int" resultType="int">
		SELECT NVL(r1.heartcnt,0) heartcnt
		FROM (SELECT target_num, count(*) heartcnt
      			FROM ebd_wording_heart
      			GROUP BY target_num) r1, ebd_wording w
		WHERE r1.target_num(+) = w.num and w.num=#{num}
	</select>
	
	<!-- 수정을 위한 detail -->
	<select id="getData" parameterType="int" resultType="wordingDto">
		SELECT * 
		FROM ebd_wording
		WHERE num=#{num}
	</select>
	
	<!-- 글 update -->
	<update id="update" parameterType="wordingDto">
		UPDATE ebd_wording
		SET content=#{content}
		WHERE num=#{num}
	</update>
	
	<!-- 글 delete -->
	<delete id="delete" parameterType="int">
		DELETE FROM ebd_wording
		WHERE num=#{num}
	</delete>
	
	<!-- 홈화면에 BEST3을 리턴하는 쿼리 -->
	<select id="getBestHeartList" resultType="wordingDto">
		SELECT * 
		FROM 
			(SELECT NVL(r1.heartcnt,0) heartcnt, w.num, w.writer, w.title, w.content, w.author, w.regdate, u.profile
			FROM (select target_num, count(*) heartcnt
		      		FROM ebd_wording_heart
		      		GROUP BY target_num) r1, ebd_wording w, ebd_users u
			WHERE r1.target_num(+) = w.num AND w.writer = u.nick
			ORDER BY heartcnt DESC)
		WHERE ROWNUM BETWEEN 1 AND 3
	</select>
	
	<!--wording 목록을 select regdate컬럼은 두 테이블에 모두 존재하므로 어떤 테이블의 regdate인지 명시해주어야한다.(여기선 글 쓴 regdate가 필요)-->
	<select id="getMyList" parameterType="wordingDto" resultType="wordingDto">
		SELECT *
		FROM
			(SELECT result1.*, ROWNUM AS rnum
			FROM
				(SELECT num, writer, title, content, author, ebd_wording.regdate, profile
				FROM ebd_wording, ebd_users 
				WHERE ebd_wording.writer = ebd_users.nick AND ebd_wording.writer=#{nick}
				ORDER BY num DESC) result1) 
		WHERE rnum BETWEEN #{startRowNum} AND #{endRowNum}
	</select>
	
	<select id="getMyCount" parameterType="wordingDto" resultType="int">
		SELECT NVL(MAX(ROWNUM), 0)
		FROM ebd_wording
		WHERE writer=#{nick}
	</select>
	
	<!--wording 목록을 select regdate컬럼은 두 테이블에 모두 존재하므로 어떤 테이블의 regdate인지 명시해주어야한다.(여기선 글 쓴 regdate가 필요)-->
	<select id="getMyHeartList" parameterType="wordingDto" resultType="wordingDto">
		SELECT *
		FROM
			(SELECT r1.target_num, r1.num, r1.writer, r1.title, r1.content, r1.author, r1.regdate, r1.profile, ROWNUM AS rnum
			FROM
				(SELECT w.num, NVL(h.target_num,0) target_num, w.writer, w.title, w.content, w.author, w.regdate, u.profile
				FROM ebd_wording w, ebd_wording_heart h, ebd_users u
				WHERE w.num = h.target_num AND h.writer=#{nick} AND w.writer=u.nick
				ORDER BY num DESC) r1) 
		WHERE rnum BETWEEN #{startRowNum} AND #{endRowNum}
	</select>
	
	<select id="getMyHeartCount" parameterType="wordingDto" resultType="int">
		SELECT COUNT(*)
		FROM ebd_wording_heart
		WHERE writer=#{nick}
	</select>
	
	<!-- 로그인이 되어있다면 로그인된 아이디의 하트 테이블 정보를 select해준다. -->
	<select id="selectMyHeartInfo" parameterType="wordingDto" resultType="int">
		SELECT target_num
		FROM
			(SELECT r1.target_num, ROWNUM AS rnum
			FROM
				(SELECT w.num, NVL(h.target_num,0) target_num
				FROM ebd_wording w, ebd_wording_heart h
				WHERE w.num = h.target_num AND h.writer=#{nick}
				ORDER BY num DESC) r1) 
		WHERE rnum BETWEEN #{startRowNum} AND #{endRowNum}
	</select>
	



</mapper>